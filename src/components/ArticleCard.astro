---
export interface Props {
  title: string;
  description: string;
  slug: string;
  date: Date;
  author: string;
  image?: string;
  tags: string[];
  category: string;
}

const { title, description, slug, date, author, image, tags, category } = Astro.props;

// Format the date
const formattedDate = new Date(date).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});

// Calculate reading time (rough estimate: 200 words per minute)
const readingTime = Math.ceil(description.split(' ').length / 4);
---

<article class="bg-surface rounded-lg overflow-hidden shadow-card hover:shadow-card-hover transition-all duration-300 group">
  {image && (
    <div class="relative h-48 overflow-hidden">
      <img 
        src={image} 
        alt={title} 
        class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500"
      />
      <div class="absolute inset-0 bg-gradient-to-t from-bg/80 to-transparent"></div>
      <span class="absolute top-4 left-4 bg-primary text-bg px-3 py-1 rounded-full text-sm font-medium">
        {category}
      </span>
    </div>
  )}
  
  <div class="p-6">
    <h3 class="text-xl font-heading font-bold text-text-primary mb-2 group-hover:text-primary transition-colors">
      <a href={`/articles/${slug}`} class="block">
        {title}
      </a>
    </h3>
    
    <p class="text-text-secondary mb-4 line-clamp-2">
      {description}
    </p>
    
    <div class="flex items-center justify-between text-sm text-text-secondary mb-4">
      <div class="flex items-center gap-4">
        <span>{author}</span>
        <span class="text-surface-lava">â€¢</span>
        <span>{formattedDate}</span>
      </div>
      <span>{readingTime} min read</span>
    </div>
    
    <div class="flex flex-wrap gap-2">
      {tags.slice(0, 3).map((tag) => (
        <span class="bg-surface-700 text-text-secondary px-2 py-1 rounded text-xs">
          {tag}
        </span>
      ))}
    </div>
  </div>
</article>