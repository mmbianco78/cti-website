---
export interface Props {
  name: string;
  videoSrc: string;
  posterSrc: string;
  achievement: string;
  philosophy: string;
  authorId: string;
}

const { name, videoSrc, posterSrc, achievement, philosophy, authorId } = Astro.props;
---

<div class="instructor-video-card">
  <div class="video-container">
    <img src={posterSrc} alt={name} class="video-poster" />
    <button class="play-button" data-video={videoSrc}>
      <svg viewBox="0 0 24 24" fill="currentColor">
        <path d="M8 5v14l11-7z"/>
      </svg>
    </button>
  </div>
  <div class="instructor-info">
    <h3 class="instructor-name">{name}</h3>
    <p class="instructor-achievement">{achievement}</p>
    <p class="instructor-philosophy">"{philosophy}"</p>
    <a 
      href={`https://digital.claytargetinstruction.com?authorId=${authorId}`}
      class="instructor-cta"
      data-tracking={`index3_instructor_${name.toLowerCase().replace(/\s+/g, '_')}`}
    >
      Learn From {name.split(' ')[0]} â†’
    </a>
  </div>
</div>

<style>
  .instructor-video-card {
    background: white;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    transition: transform 0.3s ease;
  }

  .instructor-video-card:hover {
    transform: translateY(-4px);
  }

  .video-container {
    position: relative;
    aspect-ratio: 16/9;
    overflow: hidden;
  }

  .video-poster {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .play-button {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 60px;
    height: 60px;
    background: rgba(0,0,0,0.8);
    border: none;
    border-radius: 50%;
    color: white;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .play-button:hover {
    background: var(--color-accent);
    transform: translate(-50%, -50%) scale(1.1);
  }

  .play-button svg {
    width: 24px;
    height: 24px;
    margin-left: 4px;
  }

  .instructor-info {
    padding: 1.5rem;
  }

  .instructor-name {
    font-size: 1.5rem;
    margin-bottom: 0.5rem;
  }

  .instructor-achievement {
    color: var(--color-accent);
    font-weight: 600;
    margin-bottom: 1rem;
  }

  .instructor-philosophy {
    font-style: italic;
    color: var(--color-gray);
    margin-bottom: 1.5rem;
  }

  .instructor-cta {
    display: inline-block;
    background: var(--color-accent);
    color: white;
    padding: 0.75rem 1.5rem;
    border-radius: 4px;
    text-decoration: none;
    font-weight: 600;
    transition: background 0.3s ease;
  }

  .instructor-cta:hover {
    background: var(--color-accent-dark);
  }
</style>

<script>
  // Simple video modal handler
  document.querySelectorAll('.play-button').forEach(button => {
    button.addEventListener('click', (e) => {
      const videoSrc = (e.currentTarget as HTMLElement).dataset.video;
      // For now, just link to digital platform
      // TODO: Implement modal video player
      window.location.href = 'https://digital.claytargetinstruction.com';
    });
  });
</script>